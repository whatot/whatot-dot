if [[ -d "/usr/share/oh-my-zsh/" ]];then
    ZSH=/usr/share/oh-my-zsh/
    DISABLE_AUTO_UPDATE="true"
else
    ZSH=~/.oh-my-zsh/
    DISABLE_AUTO_UPDATE="false"
fi

function aliproxy() {
    export all_proxy="socks5://127.0.0.1:13659"
    export http_proxy="socks5://127.0.0.1:13659"
    export https_proxy="socks5://127.0.0.1:13659"
}
function setproxy() {
    export all_proxy="socks5://127.0.0.1:7891"
    export http_proxy="http://127.0.0.1:7890"
    export https_proxy="http://127.0.0.1:7890"
}
function unsetproxy() {
    unset ALL_PROXY
    unset all_proxy
    unset http_proxy
    unset https_proxy
}

case `uname` in
    Darwin)
        ZSH_THEME="robbyrussell"
        source ~/.zshenv
        alias vim='mvim -v'
        SCCACHE_WRAPPER="/usr/local/bin/sccache"
        export HOMEBREW_NO_AUTO_UPDATE=1
    ;;
    Linux)
        ZSH_THEME="gentoo"
        export GTK_IM_MODULE=fcitx
        export QT_IM_MODULE=fcitx
        export XMODIFIERS="@im=fcitx"
        alias gvim='gvim -c "call Maximize_Window()"'
        alias unzipp='unzip -O cp936'
        SCCACHE_WRAPPER="/usr/bin/sccache"
    ;;
esac

plugins=(git colorize cargo common-aliases kubectl sdk)

alias mvalidate="mvn validate -U"
alias mdeploy='mvn clean deploy -Dmaven.test.skip=true'
alias mtree='mvn clean dependency:tree -U'
alias msource='mvn dependency:sources'

alias mcc='mvn clean compile -U'
alias mcco='mvn clean compile -U --offline'
alias mtt='mvn clean test -U'
alias mtto='mvn clean test -U --offline'

alias myip="curl ifconfig.me"

unset GREP_OPTIONS
export MESA_GL_VERSION_OVERRIDE=2.1
export XDG_CONFIG_HOME="$HOME/.config/"
export LC_MESSAGES="en_US.UTF-8"
export EDITOR='vim'

ZSH_CACHE_DIR=$HOME/.oh-my-zsh-cache
if [[ ! -d $ZSH_CACHE_DIR ]]; then
    mkdir $ZSH_CACHE_DIR
fi

PY_ENV_WRAPPER=/usr/bin/virtualenvwrapper.sh
if [[ -f $PY_ENV_WRAPPER ]]; then
    source $PY_ENV_WRAPPER
    export WORKON_HOME="$HOME/envs/"
fi

if [[ -f $SCCACHE_WRAPPER ]]; then
    export RUSTC_WRAPPER="${SCCACHE_WRAPPER}"
fi

source $ZSH/oh-my-zsh.sh

# curl -s "https://get.sdkman.io" | bash
# sdk install java 11.0.6.hs-adpt
# sdk install java 8.0.242.hs-adpt
# sdk list java
# sdk current java
export SDKMAN_DIR="$HOME/.sdkman"
if [[ -s "$SDKMAN_DIR/bin/sdkman-init.sh" ]]; then
    source "$SDKMAN_DIR/bin/sdkman-init.sh"
    # sdk offline enable

    function usejdk8() {
        sdk use java 8.0.242.hs-adpt
    }
    function usejdk11() {
        sdk use java 11.0.6.hs-adpt
    }
fi
